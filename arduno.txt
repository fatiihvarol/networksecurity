#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>

const char* ssid = "Fatih";
const char* password = "12345678";
const char* apiKey = "D9OIDSFTUNIYXVN0";

const int DHTPin = 2;
DHT dht(DHTPin, DHT11);

const uint8_t xorKey = 0b10101010;  // Burada kendi belirleyeceğiniz bir XOR anahtarı ekleyin.

void setup() {
  Serial.begin(115200);
  delay(1000);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.println("\nConnecting");

  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(100);
  }

  Serial.println("\nConnected to the WiFi network");
  Serial.print("Local ESP32 IP: ");
  Serial.println(WiFi.localIP());

  dht.begin();
}

void loop() {
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();



  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("DHT11 sensor data is invalid!");
    delay(2000);
    return;
  }

  // Sıcaklık ve nem değerlerini integer değerlere çevirir
  int intTemperature = static_cast<int>(temperature);
  int intHumidity = static_cast<int>(humidity);

  // Sıcaklık değerini binary formata çevirir
  String binaryTemperature = String(intTemperature, BIN);
  String binaryHumidity = String(intHumidity, BIN);


  // XOR işlemi uygular
  int encryptedTemperature = intTemperature ^ xorKey;
  int encryptedHumidity = intHumidity ^ xorKey;

  // Orijinal sıcaklık değerinin bit hali ve şifrelenmiş sıcaklık değeri Serial Monitor'a yazdırılır
  Serial.println("Original Temperature (Binary): " + binaryTemperature);
    Serial.println("temperature :"+String(temperature));
  Serial.println("humidity :"+String(humidity));
  Serial.println("XOR Key: " + String(xorKey, BIN));
  Serial.println("Encrypted Temperature: " + String(encryptedTemperature, BIN));


  // ThingSpeak update
 // ThingSpeak update
String url = "https://api.thingspeak.com/update?api_key=" + String(apiKey) +
             "&field1=" + String(encryptedTemperature, BIN) + "&field2=" + String(encryptedHumidity, BIN);


  HTTPClient http;
  http.begin(url);

  int httpCode = http.GET();
  if (httpCode == HTTP_CODE_OK) {
    String payload = http.getString();
    Serial.println("Data sent to ThingSpeak successfully. Response: " + payload);
  } else {
    Serial.println("Failed to send data to ThingSpeak. HTTP code: " + String(httpCode));
  }

  http.end();

  delay(2000);
  Serial.print("**************************************");
}
